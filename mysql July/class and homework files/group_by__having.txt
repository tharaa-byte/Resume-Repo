
mysql> use besant;
Database changed
mysql> show tables;
+------------------+
| Tables_in_besant |
+------------------+
| datac            |
| departments      |
| employees        |
| salespeople      |
| t1               |
+------------------+
5 rows in set (0.00 sec)

mysql> select * from departments;
+---------------+-----------------+
| department_id | department_name |
+---------------+-----------------+
|             1 | IT              |
|             2 | HR              |
|             3 | Sales           |
|             4 | Non-IT          |
+---------------+-----------------+
4 rows in set (0.13 sec)

mysql> select * from employees;
+-------------+---------------+---------------+
| employee_id | employee_name | department_id |
+-------------+---------------+---------------+
|           1 | John          |             1 |
|           2 | Alice         |             1 |
|           3 | Bob           |             2 |
|           4 | Emma          |             2 |
|           5 | Charlie       |             1 |
|           6 | Dinesh        |             5 |
|           7 | Sameer        |             6 |
|           8 | Nessan        |             6 |
|           9 | Thilagan      |             7 |
+-------------+---------------+---------------+
9 rows in set (0.03 sec)

mysql> select * from employees e join departments d on e.department_id=d.department_id;
+-------------+---------------+---------------+---------------+-----------------+
| employee_id | employee_name | department_id | department_id | department_name |
+-------------+---------------+---------------+---------------+-----------------+
|           1 | John          |             1 |             1 | IT              |
|           2 | Alice         |             1 |             1 | IT              |
|           3 | Bob           |             2 |             2 | HR              |
|           4 | Emma          |             2 |             2 | HR              |
|           5 | Charlie       |             1 |             1 | IT              |

_______________________________________________________________________________________________________________________________________________________



CREATE TABLE sales (
    transaction_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    salesperson_name VARCHAR(50),
    amount DECIMAL(10, 2)
);

INSERT INTO sales (transaction_id, product_name, salesperson_name, amount) VALUES
(1, 'Laptop', 'Alice', 1200.00),
(2, 'Smartphone', 'Bob', 800.00),
(3, 'Tablet', 'Alice', 500.00),
(4, 'Laptop', 'Charlie', 1300.00),
(5, 'Smartphone', 'Alice', 900.00),
(6, 'Laptop', 'Bob', 1400.00),
(7, 'Tablet', 'Charlie', 600.00),
(8, 'Smartphone', 'Alice', 850.00),
(9, 'Laptop', 'Alice', 1500.00),
(10, 'Tablet', 'Bob', 700.00);




Total Sales Amount by Salesperson

SELECT salesperson_name, SUM(amount) AS total_sales
FROM sales
GROUP BY salesperson_name;

Average Sales Amount by Product

SELECT product_name, AVG(amount) AS average_sales
FROM sales
GROUP BY product_name;

Number of Sales Transactions by Salesperson

SELECT salesperson_name, COUNT(*) AS num_transactions
FROM sales
GROUP BY salesperson_name;

Maximum Sales Amount by Product

SELECT product_name, MAX(amount) AS max_sales
FROM sales
GROUP BY product_name;

Total Sales Amount by Salesperson and Product

SELECT salesperson_name, product_name, SUM(amount) AS total_sales
FROM sales
GROUP BY salesperson_name, product_name;


___________________________________________________________________________________________________________________________

Salespersons with Total Sales Over 2000

SELECT salesperson_name, SUM(amount) AS total_sales
FROM sales
GROUP BY salesperson_name
HAVING SUM(amount) > 2000;


Products with Average Sales Amount Over 800
SELECT product_name, AVG(amount) AS average_sales
FROM sales
GROUP BY product_name
HAVING AVG(amount) > 800;

Salespersons with More Than 2 Transactions

SELECT salesperson_name, COUNT(*) AS num_transactions
FROM sales
GROUP BY salesperson_name
HAVING COUNT(*) > 2;

Products with Maximum Sales Amount Over 1000
SELECT product_name, MAX(amount) AS max_sales
FROM sales
GROUP BY product_name
HAVING MAX(amount) > 1000;

Salespersons with Total Sales Over 1000 for Laptops
SELECT salesperson_name, product_name, SUM(amount) AS total_sales
FROM sales
GROUP BY salesperson_name, product_name
HAVING product_name = 'Laptop' AND SUM(amount) > 1000;


-- ORDER BY examples
SELECT * FROM sales
ORDER BY amount ASC;

SELECT * FROM sales
ORDER BY amount DESC;

SELECT * FROM sales
ORDER BY salesperson_name ASC, amount DESC;

SELECT salesperson_name, SUM(amount) AS total_sales
FROM sales
GROUP BY salesperson_name
ORDER BY salesperson_name; (you get same answer even if you leave order by in this context)

SELECT product_name, AVG(amount) AS average_sales
FROM sales
GROUP BY product_name
ORDER BY average_sales DESC; (placed in same order then with or without order by you get same answer)


________________________________________________________________________________________________



+-------------+---------------+---------------+---------------+-----------------+
5 rows in set (0.01 sec)

mysql> select e.department_id,d.department_name from employees e join departments d on e.department_id=d.department_id;
+---------------+-----------------+
| department_id | department_name |
+---------------+-----------------+
|             1 | IT              |
|             1 | IT              |
|             2 | HR              |
|             2 | HR              |
|             1 | IT              |
+---------------+-----------------+
5 rows in set (0.00 sec)

mysql> select e.department_id,d.department_name from employees e join departments d on e.department_id=d.department_id group by e.department_id,d.department_name;
+---------------+-----------------+
| department_id | department_name |
+---------------+-----------------+
|             1 | IT              |
|             2 | HR              |
+---------------+-----------------+
2 rows in set (0.01 sec)

mysql> select e.department_id,d.department_name,count(e.department_id) from employees e join departments d on e.department_id=d.department_id group by e.department_id,d.department_name;
+---------------+-----------------+------------------------+
| department_id | department_name | count(e.department_id) |
+---------------+-----------------+------------------------+
|             1 | IT              |                      3 |
|             2 | HR              |                      2 |
+---------------+-----------------+------------------------+
2 rows in set (0.00 sec)

mysql> select e.department_id,d.department_name,count(e.department_id) from employees e join departments d on e.department_id=d.department_id group by e.department_id,d.department_name having count(e.department_id)>2;
+---------------+-----------------+------------------------+
| department_id | department_name | count(e.department_id) |
+---------------+-----------------+------------------------+
|             1 | IT              |                      3 |
+---------------+-----------------+------------------------+
1 row in set (0.01 sec)

SUBQUERIES:

select * from salespeople where snum=(select snum from orders where amt>9000);(it prints a particular row)
select * from orders;
select * from customers where cnum=(select * from orders where amt>9000); (it prints a particular row)