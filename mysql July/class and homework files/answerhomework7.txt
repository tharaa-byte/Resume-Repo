1. List all the columns of the Salespeople table.
sql
Copy code
DESC Salespeople;
2. List all customers with a rating of 100.
sql
Copy code
SELECT * FROM Customers
WHERE RATING = 100;
3. Find all records in the Customer table with NULL values in the city column.
sql
Copy code
SELECT * FROM Customers
WHERE CITY IS NULL;
4. Find the largest order taken by each salesperson on each date.
sql
Copy code
SELECT SNUM, ODATE, MAX(AMT) AS MaxAmount
FROM Orders
GROUP BY SNUM, ODATE;
5. Arrange the Orders table by descending customer number.
sql
Copy code
SELECT * FROM Orders
ORDER BY CNUM DESC;
6. Find which salespeople currently have orders in the Orders table.
sql
Copy code
SELECT DISTINCT SNUM
FROM Orders;
7. List names of all customers matched with the salespeople serving them.
sql
Copy code
SELECT C.CNAME AS CustomerName, S.SNAME AS SalespersonName
FROM Customers C
JOIN Salespeople S ON C.SNUM = S.SNUM;
8. Find the names and numbers of all salespeople who had more than one customer.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM, S.SNAME
HAVING COUNT(DISTINCT C.CNUM) > 1;
9. Count the orders of each of the salespeople and output the results in descending order.
sql
Copy code
SELECT SNUM, COUNT(ONUM) AS OrderCount
FROM Orders
GROUP BY SNUM
ORDER BY OrderCount DESC;
10. List the Customer table if and only if one or more of the customers in the Customer table are located in San Jose.
sql
Copy code
SELECT * FROM Customers
WHERE CITY = 'San Jose';
11. Match salespeople to customers according to what city they lived in.
sql
Copy code
SELECT C.CNAME, S.SNAME
FROM Customers C
JOIN Salespeople S ON C.CITY = S.CITY;
12. Find the largest order taken by each salesperson.
sql
Copy code
SELECT SNUM, MAX(AMT) AS LargestOrder
FROM Orders
GROUP BY SNUM;
13. Find customers in San Jose who have a rating above 200.
sql
Copy code
SELECT * FROM Customers
WHERE CITY = 'San Jose' AND RATING > 200;
14. List the names and commissions of all salespeople in London.
sql
Copy code
SELECT SNAME, COMM
FROM Salespeople
WHERE CITY = 'London';
15. List all the orders of salesperson Motika from the Orders table.
sql
Copy code
SELECT O.*
FROM Orders O
JOIN Salespeople S ON O.SNUM = S.SNUM
WHERE S.SNAME = 'Motika';
16. Find all customers with orders on October 3.
sql
Copy code
SELECT DISTINCT C.*
FROM Customers C
JOIN Orders O ON C.CNUM = O.CNUM
WHERE O.ODATE = '1996-10-03';
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000.00 above the MAX amount.
sql
Copy code
WITH DateSums AS (
    SELECT ODATE, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY ODATE
),
MaxAmounts AS (
    SELECT ODATE, MAX(AMT) AS MaxAmount
    FROM Orders
    GROUP BY ODATE
)
SELECT D.ODATE, D.TotalAmount
FROM DateSums D
JOIN MaxAmounts M ON D.ODATE = M.ODATE
WHERE D.TotalAmount >= M.MaxAmount + 2000;
18. Select all orders that had amounts that were greater than at least one of the orders from October 6.
sql
Copy code
SELECT *
FROM Orders O1
WHERE AMT > ANY (SELECT AMT FROM Orders WHERE ODATE = '1996-10-06');
19. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
WHERE EXISTS (
    SELECT 1
    FROM Customers C
    WHERE C.SNUM = S.SNUM AND C.RATING = 300
);
20. Find all pairs of customers having the same rating.
sql
Copy code
SELECT C1.CNUM AS CNUM1, C1.CNAME AS CNAME1, C2.CNUM AS CNUM2, C2.CNAME AS CNAME2
FROM Customers C1
JOIN Customers C2 ON C1.RATING = C2.RATING AND C1.CNUM <> C2.CNUM;
21. Find all customers whose CNUM is 1000 above the SNUM of Serres.
sql
Copy code
SELECT *
FROM Customers
WHERE CNUM = (SELECT SNUM + 1000 FROM Salespeople WHERE SNAME = 'Serres');
22. Give the salespeople’s commissions as percentages instead of decimal numbers.
sql
Copy code
SELECT SNAME, COMM * 100 AS CommissionPercentage
FROM Salespeople;
23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders which are less than $3000.00 in value.
sql
Copy code
WITH MaxOrders AS (
    SELECT SNUM, ODATE, MAX(AMT) AS MaxAmount
    FROM Orders
    GROUP BY SNUM, ODATE
)
SELECT *
FROM MaxOrders
WHERE MaxAmount >= 3000;
24. List the largest orders for October 3, for each salesperson.
sql
Copy code
WITH Oct3Orders AS (
    SELECT SNUM, MAX(AMT) AS MaxAmount
    FROM Orders
    WHERE ODATE = '1996-10-03'
    GROUP BY SNUM
)
SELECT O.*
FROM Orders O
JOIN Oct3Orders O3 ON O.SNUM = O3.SNUM AND O.AMT = O3.MaxAmount
WHERE O.ODATE = '1996-10-03';
25. Find all customers located in cities where Serres (SNUM 1002) has customers.
sql
Copy code
SELECT DISTINCT C.*
FROM Customers C
JOIN Customers S ON C.CITY = S.CITY
WHERE S.SNUM = 1002;



26. Select all customers with a rating above 200.00.
sql
Copy code
SELECT * FROM Customers
WHERE RATING > 200;
27. Count the number of salespeople currently listing orders in the Orders table.
sql
Copy code
SELECT COUNT(DISTINCT SNUM) AS SalespeopleCount
FROM Orders;
28. Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name and the salesperson’s rate of commission.
sql
Copy code
SELECT C.CNAME AS CustomerName, S.COMM AS SalespersonCommission
FROM Customers C
JOIN Salespeople S ON C.SNUM = S.SNUM
WHERE S.COMM > 0.12;
29. Find salespeople who have multiple customers.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM, S.SNAME
HAVING COUNT(DISTINCT C.CNUM) > 1;
30. Find salespeople with customers located in their city.
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.CITY = C.CITY AND S.SNUM = C.SNUM;
31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
sql
Copy code
SELECT * FROM Salespeople
WHERE SNAME LIKE 'P__l%';
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. Assume you do not know his customer number.
sql
Copy code
SELECT * FROM Orders
WHERE CNUM = (SELECT CNUM FROM Customers WHERE CNAME = 'Cisneros');
33. Find the largest orders for Serres and Rifkin.
sql
Copy code
SELECT S.SNAME, O.ODATE, MAX(O.AMT) AS LargestOrder
FROM Orders O
JOIN Salespeople S ON O.SNUM = S.SNUM
WHERE S.SNAME IN ('Serres', 'Rifkin')
GROUP BY S.SNAME, O.ODATE;
34. Extract the Salespeople table in the following order: SNUM, SNAME, COMMISSION, CITY.
sql
Copy code
SELECT SNUM, SNAME, COMM AS COMMISSION, CITY
FROM Salespeople;
35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
sql
Copy code
SELECT * FROM Customers
WHERE CNAME BETWEEN 'A' AND 'G';
36. Select all the possible combinations of customers that you can assign.
sql
Copy code
SELECT C1.CNAME AS Customer1, C2.CNAME AS Customer2
FROM Customers C1
CROSS JOIN Customers C2
WHERE C1.CNUM <> C2.CNUM;
37. Select all orders that are greater than the average for October 4.
sql
Copy code
WITH Oct4Orders AS (
    SELECT AMT
    FROM Orders
    WHERE ODATE = '1996-10-04'
),
AverageAmt AS (
    SELECT AVG(AMT) AS AvgAmount
    FROM Oct4Orders
)
SELECT *
FROM Orders
WHERE ODATE = '1996-10-04' AND AMT > (SELECT AvgAmount FROM AverageAmt);
38. Write a SELECT command using a correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.
sql
Copy code
SELECT C1.CNUM, C1.CNAME
FROM Customers C1
WHERE RATING = (
    SELECT MAX(C2.RATING)
    FROM Customers C2
    WHERE C1.CITY = C2.CITY
);
39. Write a query that totals the orders for each day and places the results in descending order.
sql
Copy code
SELECT ODATE, SUM(AMT) AS TotalAmount
FROM Orders
GROUP BY ODATE
ORDER BY TotalAmount DESC;
40. Write a SELECT command that produces the rating followed by the name of each customer in San Jose.
sql
Copy code
SELECT RATING, CNAME
FROM Customers
WHERE CITY = 'San Jose';
41. Find all orders with amounts smaller than any amount for a customer in San Jose.
sql
Copy code
SELECT *
FROM Orders
WHERE AMT < ALL (
    SELECT AMT
    FROM Orders
    JOIN Customers ON Orders.CNUM = Customers.CNUM
    WHERE Customers.CITY = 'San Jose'
);
42. Find all orders with above average amounts for their customers.
sql
Copy code
WITH CustomerAverage AS (
    SELECT CNUM, AVG(AMT) AS AvgAmount
    FROM Orders
    GROUP BY CNUM
)
SELECT O.*
FROM Orders O
JOIN CustomerAverage CA ON O.CNUM = CA.CNUM
WHERE O.AMT > CA.AvgAmount;
43. Write a query that selects the highest rating in each city.
sql
Copy code
SELECT CITY, MAX(RATING) AS HighestRating
FROM Customers
GROUP BY CITY;
44. Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00.
sql
Copy code
SELECT O.ONUM, O.AMT, O.CNUM, S.SNAME, (O.AMT * S.COMM) AS CommissionAmount
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM
JOIN Salespeople S ON O.SNUM = S.SNUM
WHERE C.RATING > 100;
45. Count the customers with ratings above San Jose’s average.
sql
Copy code
WITH SanJoseAvg AS (
    SELECT AVG(RATING) AS AvgRating
    FROM Customers
    WHERE CITY = 'San Jose'
)
SELECT COUNT(*)
FROM Customers
WHERE RATING > (SELECT AvgRating FROM SanJoseAvg);
46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows with the order reversed.
sql
Copy code
SELECT S1.SNAME AS Salesperson1, S2.SNAME AS Salesperson2
FROM Salespeople S1
CROSS JOIN Salespeople S2;
47. Find all salespeople that are located in either Barcelona or London.
sql
Copy code
SELECT *
FROM Salespeople
WHERE CITY IN ('Barcelona', 'London');
48. Find all salespeople with only one customer.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM, S.SNAME
HAVING COUNT(C.CNUM) = 1;
49. Write a query that joins the Customer table to itself to find all pairs of customers served by a single salesperson.
sql
Copy code
SELECT C1.CNAME AS Customer1, C2.CNAME AS Customer2, C1.SNUM
FROM Customers C1
JOIN Customers C2 ON C1.SNUM = C2.SNUM AND C1.CNUM <> C2.CNUM;
50. Write a query that will give you all orders for more than $1000.00.
sql
Copy code
SELECT *
FROM Orders
WHERE AMT > 1000;
51. Write a query that lists each order number followed by the name of the customer who made that order.
sql
Copy code
SELECT O.ONUM, C.CNAME
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM;
52. Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they do not service. One using a join and one a correlated subquery. Which solution is more elegant?
Using Join:

sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.CITY = C.CITY
LEFT JOIN Orders O ON C.CNUM = O.CNUM AND O.SNUM = S.SNUM
WHERE O.SNUM IS NULL;
Using Correlated Subquery:

sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
WHERE EXISTS (
    SELECT 1
    FROM Customers C
    WHERE C.CITY = S.CITY AND C.SNUM <> S.SNUM
);
The join version is generally more intuitive, but the correlated subquery may be more elegant in terms of readability.

53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’?
sql
Copy code
SELECT *
FROM Customers
WHERE RATING >= ANY (
    SELECT RATING
    FROM Customers
    WHERE SNUM = 1002
);
54. Write 2 queries that will produce all orders taken on October 3 or October 4.
Using IN:

sql
Copy code
SELECT *
FROM Orders
WHERE ODATE IN ('1996-10-03', '1996-10-04');
Using OR:

sql
Copy code
SELECT *
FROM Orders
WHERE ODATE = '1996-10-03' OR ODATE = '1996-10-04';
55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates.
sql
Copy code
SELECT O1.ONUM AS Order1, O2.ONUM AS Order2
FROM Orders O1
JOIN Orders O2 ON O1.CNUM = O2.CNUM AND O1.ONUM < O2.ONUM
WHERE O1.CNUM = (SELECT CNUM FROM Customers WHERE CNAME = 'Cisneros');
56. Find only those customers whose ratings are higher than every customer in Rome.
sql
Copy code
SELECT *
FROM Customers
WHERE RATING > ALL (
    SELECT RATING
    FROM Customers
    WHERE CITY = 'Rome'
);
57. Write a query on the Customers table whose output will exclude all customers with a rating <= 100.00, unless they are located in Rome.
sql
Copy code
SELECT *
FROM Customers
WHERE RATING > 100 OR CITY = 'Rome';
58. Find all rows from the Customers table for which the salesperson number is 1001.
sql
Copy code
SELECT *
FROM Customers
WHERE SNUM = 1001;
59. Find the total amount in Orders for each salesperson for whom this total is greater than the amount of the largest order in the table.
sql
Copy code
WITH MaxOrder AS (
    SELECT MAX(AMT) AS MaxAmount
    FROM Orders
),
SalespersonTotals AS (
    SELECT SNUM, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY SNUM
)
SELECT SNUM, TotalAmount
FROM SalespersonTotals
WHERE TotalAmount > (SELECT MaxAmount FROM MaxOrder);
60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
sql
Copy code
SELECT *
FROM Orders
WHERE AMT IS NOT NULL AND AMT > 0;
61. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.
sql
Copy code
SELECT S.SNAME AS Salesperson, C.CNAME AS Customer
FROM Salespeople S
JOIN Customers C ON S.SNAME < C.CNAME
WHERE C.RATING < 200;
62. List all Salespeople’s names and the Commission they have earned.
sql
Copy code
SELECT SNAME, COMM AS Commission
FROM Salespeople;
63. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be usable if his rating changed.
sql
Copy code
SELECT CNAME, CITY
FROM Customers
WHERE RATING = (
    SELECT RATING
    FROM Customers
    WHERE CNAME = 'Hoffman'
);
64. Find all salespeople for whom there are customers that follow them in alphabetical order.
sql
Copy code
SELECT DISTINCT S.SNAME
FROM Salespeople S
JOIN Customers C ON S.CCITY = C.CITY
WHERE EXISTS (
    SELECT 1
    FROM Customers C2
    WHERE C2.CNAME > C.CNAME AND C2.CITY = C.CITY
);
65. Write a query that produces the names and ratings of all customers of all who have above average orders.
sql
Copy code
WITH AboveAverageOrders AS (
    SELECT CNUM
    FROM Orders
    GROUP BY CNUM
    HAVING SUM(AMT) > (SELECT AVG(SUM(AMT)) FROM Orders GROUP BY CNUM)
)
SELECT C.CNAME, C.RATING
FROM Customers C
WHERE C.CNUM IN (SELECT CNUM FROM AboveAverageOrders);
66. Find the SUM of all purchases from the Orders table.
sql
Copy code
SELECT SUM(AMT) AS TotalSum
FROM Orders;
67. Write a SELECT command that produces the order number, amount, and date for all rows in the order table.
sql
Copy code
SELECT ONUM, AMT, ODATE
FROM Orders;
68. Count the number of non-NULL rating fields in the Customers table (including repeats).
sql
Copy code
SELECT COUNT(RATING) AS NonNullRatings
FROM Customers;
69. Write a query that gives the names of both the salesperson and the customer for each order.
sql
Copy code
SELECT O.ONUM, C.CNAME AS CustomerName, S.SNAME AS SalespersonName
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM
JOIN Salespeople S ON O.SNUM = S.SNUM;
70. List the commissions of all salespeople servicing customers in London.
sql
Copy code
SELECT DISTINCT S.COMM
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
WHERE C.CITY = 'London';
71. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
WHERE NOT EXISTS (
    SELECT 1
    FROM Customers C
    WHERE C.CITY = S.CITY AND C.SNUM = S.SNUM
);
72. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
WHERE EXISTS (
    SELECT 1
    FROM Customers C
    WHERE C.CITY = S.CITY AND C.SNUM <> S.SNUM
);
73. Write a query that selects all customers serviced by Peel or Motika.
sql
Copy code
SELECT C.*
FROM Customers C
JOIN Salespeople S ON C.SNUM = S.SNUM
WHERE S.SNAME IN ('Peel', 'Motika');
74. Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.)
sql
Copy code
SELECT O.ODATE, COUNT(DISTINCT O.SNUM) AS SalespersonCount
FROM Orders O
GROUP BY O.ODATE;
75. Find all orders attributed to salespeople in London.
sql
Copy code
SELECT O.*
FROM Orders O
JOIN Salespeople S ON O.SNUM = S.SNUM
WHERE S.CITY = 'London';
76. Find all orders by customers not located in the same cities as their salespeople.
sql
Copy code
SELECT O.*
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM
JOIN Salespeople S ON O.SNUM = S.SNUM
WHERE C.CITY <> S.CITY;
77. Find all salespeople who have customers with more than one current order.
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
JOIN Orders O ON C.CNUM = O.CNUM
GROUP BY S.SNUM, S.SNAME
HAVING COUNT(O.ONUM) > 1;
78. Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.
sql
Copy code
SELECT C.*
FROM Customers C
WHERE C.SNUM IN (
    SELECT S.SNUM
    FROM Salespeople S
    WHERE EXISTS (
        SELECT 1
        FROM Customers C2
        JOIN Orders O2 ON C2.CNUM = O2.CNUM
        WHERE C2.SNUM = S.SNUM AND C2.CNUM <> C.CNUM
    )
);
79. Write a query that selects all customers whose names begin with ‘C’.
sql
Copy code
SELECT *
FROM Customers
WHERE CNAME LIKE 'C%';
80. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form: for the city (city) the highest rating is: (rating).
sql
Copy code
SELECT CITY, MAX(RATING) AS HighestRating
FROM Customers
GROUP BY CITY;
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).
sql
Copy code
SELECT DISTINCT SNUM
FROM Orders;
82. Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s names and numbers.
sql
Copy code
SELECT RATING, CNAME, CNUM
FROM Customers
ORDER BY RATING DESC;
83. Find the average commission for salespeople in London.
sql
Copy code
SELECT AVG(COMM) AS AvgCommission
FROM Salespeople
WHERE CITY = 'London';
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
sql
Copy code
SELECT O.*
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM
WHERE C.SNUM = (
    SELECT SNUM
    FROM Customers
    WHERE CNUM = 2001
);
85. Find all salespeople whose commission is between 0.10 and 0.12 (both inclusive).
sql
Copy code
SELECT *
FROM Salespeople
WHERE COMM BETWEEN 0.10 AND 0.12;
86. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.
sql
Copy code
SELECT SNAME, CITY
FROM Salespeople
WHERE CITY = 'London' AND COMM > 0.10;
87. What will be the output from the following query?
sql
Copy code
SELECT * FROM ORDERS 
WHERE (AMT < 1000 OR NOT (ODATE = '1996-10-03' AND CNUM > 2003));
Output: The query will select all orders where the amount is less than 1000 or where the order date is not October 3, 1996, or the customer number is not greater than 2003.

88. Write a query that selects each customer’s smallest order.
sql
Copy code
SELECT CNUM, MIN(AMT) AS SmallestOrder
FROM Orders
GROUP BY CNUM;
89. Write a query that selects the first customer in alphabetical order whose name begins with G.
sql
Copy code
SELECT *
FROM Customers
WHERE CNAME LIKE 'G%'
ORDER BY CNAME
FETCH FIRST 1 ROW ONLY;
90. Write a query that counts the number of different non-NULL city values in the Customers table.
sql
Copy code
SELECT COUNT(DISTINCT CITY) AS NonNullCityCount
FROM Customers
WHERE CITY IS NOT NULL;
91. Find the average amount from the Orders table.
sql
Copy code
SELECT AVG(AMT) AS AvgAmount
FROM Orders;
92. What would be the output from the following query?
sql
Copy code
SELECT * FROM ORDERS 
WHERE NOT (ODATE = '1996-10-03' OR SNM > 1006) AND AMT >= 1500;
Output: The query will select orders where the date is not October 3, 1996, or the salesperson number is not greater than 1006, and the amount is at least 1500.

93. Find all customers who are not located in San Jose and whose rating is above 200.
sql
Copy code
SELECT *
FROM Customers
WHERE CITY <> 'San Jose' AND RATING > 200;
94. Give a simpler way to write this query:
sql
Copy code
SELECT SNUM, SNAME, CITY, COMM 
FROM Salespeople
WHERE COMM BETWEEN 0.12 AND 0.14;
95. Evaluate the following query:
sql
Copy code
SELECT * FROM Orders 
WHERE NOT ((ODATE = '1996-10-03' AND SNM > 1002) OR AMT > 2000.00);
Output: The query will select orders where the date is not October 3, 1996, or the salesperson number is not greater than 1002, and the amount is not greater than 2000.

96. Which salespersons attend to customers not in the city they have been assigned to?
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.CNUM = C.CNUM
WHERE C.CITY <> S.CITY;
97. Which salespeople get commissions greater than 0.11 and are serving customers rated less than 250?
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
WHERE S.COMM > 0.11 AND C.RATING < 250;
98. Which salespeople have been assigned to the same city but get different commission percentages?
sql
Copy code
SELECT S1.CITY, S1.SNUM, S1.SNAME, S1.COMM AS COMM1, S2.SNUM, S2.SNAME, S2.COMM AS COMM2
FROM Salespeople S1
JOIN Salespeople S2 ON S1.CITY = S2.CITY AND S1.SNUM <> S2.SNUM AND S1.COMM <> S2.COMM;
99. Which salesperson has earned the most by way of commission?
sql
Copy code
SELECT SNUM, SNAME, COMM
FROM Salespeople
ORDER BY COMM DESC
FETCH FIRST 1 ROW ONLY;
100. Does the customer who has placed the maximum number of orders have the maximum rating?
sql
Copy code
WITH CustomerOrderCount AS (
    SELECT CNUM, COUNT(*) AS OrderCount
    FROM Orders
    GROUP BY CNUM
),
MaxOrderCountCustomer AS (
    SELECT CNUM
    FROM CustomerOrderCount
    WHERE OrderCount = (SELECT MAX(OrderCount) FROM CustomerOrderCount)
)
SELECT MAX(RATING) AS MaxRating
FROM Customers
WHERE CNUM IN (SELECT CNUM FROM MaxOrderCountCustomer);
101. Has the customer who has spent the largest amount of money been given the highest rating?
sql
Copy code
WITH MaxOrderAmount AS (
    SELECT CNUM, MAX(AMT) AS MaxAmount
    FROM Orders
    GROUP BY CNUM
),
MaxSpender AS (
    SELECT CNUM
    FROM MaxOrderAmount
    WHERE MaxAmount = (SELECT MAX(MaxAmount) FROM MaxOrderAmount)
)
SELECT MAX(RATING) AS MaxRating
FROM Customers
WHERE CNUM IN (SELECT CNUM FROM MaxSpender);
102. List all customers in descending order of customer rating.
sql
Copy code
SELECT *
FROM Customers
ORDER BY RATING DESC;
103. On which days has Hoffman placed orders?
sql
Copy code
SELECT DISTINCT O.ODATE
FROM Orders O
JOIN Customers C ON O.CNUM = C.CNUM
WHERE C.CNAME = 'Hoffman';
104. Do all salespeople have different commissions?
sql
Copy code
SELECT COUNT(DISTINCT COMM) AS UniqueCommissions, COUNT(COMM) AS TotalCommissions
FROM Salespeople;
If UniqueCommissions equals TotalCommissions, then all salespeople have different commissions.

105. Which salespeople have no orders between 10/03/1996 and 10/05/1996?
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
WHERE NOT EXISTS (
    SELECT 1
    FROM Orders O
    WHERE O.SNUM = S.SNUM
    AND O.ODATE BETWEEN '1996-10-03' AND '1996-10-05'
);
106. How many salespersons have succeeded in getting orders?
sql
Copy code
SELECT COUNT(DISTINCT SNUM) AS SalespersonCount
FROM Orders;
107. How many customers have placed orders?
sql
Copy code
SELECT COUNT(DISTINCT CNUM) AS CustomerCount
FROM Orders;
108. On which date has each salesperson booked an order of maximum value?
sql
Copy code
SELECT S.SNUM, S.SNAME, MAX(O.AMT) AS MaxOrderAmount, O.ODATE
FROM Orders O
JOIN Salespeople S ON O.SNUM = S.SNUM
GROUP BY S.SNUM, S.SNAME, O.ODATE
HAVING O.AMT = (
    SELECT MAX(AMT)
    FROM Orders
    WHERE SNUM = S.SNUM
);
109. Who is the most successful salesperson?
sql
Copy code
-- Assuming "most successful" means highest total order amount
WITH SalespersonTotal AS (
    SELECT SNUM, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY SNUM
)
SELECT SNUM, SNAME, TotalAmount
FROM Salespeople S
JOIN SalespersonTotal ST ON S.SNUM = ST.SNUM
ORDER BY TotalAmount DESC
FETCH FIRST 1 ROW ONLY;
110. Who is the worst customer with respect to the company?
sql
Copy code
-- Assuming "worst" means lowest total order amount
WITH CustomerTotal AS (
    SELECT CNUM, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY CNUM
)
SELECT CNUM, CNAME, TotalAmount
FROM Customers C
JOIN CustomerTotal CT ON C.CNUM = CT.CNUM
ORDER BY TotalAmount ASC
FETCH FIRST 1 ROW ONLY;
111. Are all customers not having placed orders greater than 200 totally been serviced by salespersons Peel or Serres?
sql
Copy code
WITH CustomersWithoutOrders AS (
    SELECT CNUM
    FROM Customers
    WHERE RATING > 200 AND CNUM NOT IN (
        SELECT CNUM
        FROM Orders
    )
),
ServicedByPeelOrSerres AS (
    SELECT DISTINCT C.CNUM
    FROM Customers C
    JOIN Salespeople S ON C.SNUM = S.SNUM
    WHERE S.SNAME IN ('Peel', 'Serres')
)
SELECT COUNT(*) = (
    SELECT COUNT(*)
    FROM CustomersWithoutOrders
) AS AllServicedByPeelOrSerres
FROM CustomersWithoutOrders CWO
LEFT JOIN ServicedByPeelOrSerres SPOS ON CWO.CNUM = SPOS.CNUM
WHERE SPOS.CNUM IS NULL;
112. Which customers have the same rating?
sql
Copy code
SELECT RATING
FROM Customers
GROUP BY RATING
HAVING COUNT(*) > 1;
113. Find all orders greater than the average for October 4th.
sql
Copy code
WITH Oct4Average AS (
    SELECT AVG(AMT) AS AvgAmount
    FROM Orders
    WHERE ODATE = '1996-10-04'
)
SELECT *
FROM Orders
WHERE AMT > (SELECT AvgAmount FROM Oct4Average);
114. Which customers have above average orders?
sql
Copy code
WITH CustomerAvgOrders AS (
    SELECT CNUM, AVG(AMT) AS AvgAmount
    FROM Orders
    GROUP BY CNUM
)
SELECT C.*
FROM Customers C
JOIN CustomerAvgOrders CAO ON C.CNUM = CAO.CNUM
WHERE CAO.AvgAmount > (SELECT AVG(AMT) FROM Orders);
115. List all customers with ratings above San Jose’s average.
sql
Copy code
WITH SanJoseAverage AS (
    SELECT AVG(RATING) AS AvgRating
    FROM Customers
    WHERE CITY = 'San Jose'
)
SELECT *
FROM Customers
WHERE RATING > (SELECT AvgRating FROM SanJoseAverage);
116. Select the total amount in orders for each salesperson for whom the total is greater than the amount of the largest order in the table.
sql
Copy code
WITH MaxOrder AS (
    SELECT MAX(AMT) AS MaxAmount
    FROM Orders
),
SalespersonTotals AS (
    SELECT SNUM, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY SNUM
)
SELECT SNUM, TotalAmount
FROM SalespersonTotals
WHERE TotalAmount > (SELECT MaxAmount FROM MaxOrder);
117. Give names and numbers of all salespersons who have more than one customer.
sql
Copy code
SELECT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM, S.SNAME
HAVING COUNT(DISTINCT C.CNUM) > 1;
118. Select all salespersons by name and number who have customers in their city whom they don’t service.
sql
Copy code
SELECT DISTINCT S.SNUM, S.SNAME
FROM Salespeople S
JOIN Customers C ON C.CITY = S.CITY
WHERE C.SNUM <> S.SNUM;
119. Which customers’ rating should be lowered?
sql
Copy code
-- Assuming "should be lowered" means customers with ratings significantly higher than the average
WITH AverageRating AS (
    SELECT AVG(RATING) AS AvgRating
    FROM Customers
)
SELECT CNUM, CNAME, RATING
FROM Customers
WHERE RATING > (SELECT AvgRating FROM AverageRating) * 1.5;
120. Is there a case for assigning a salesperson to Berlin?
sql
Copy code
-- Check if there are customers in Berlin who are not currently assigned to any salesperson
SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS CanAssign
FROM Customers
WHERE CITY = 'Berlin' AND SNUM IS NULL;
121. Is there any evidence linking the performance of a salesperson to the commission that he or she is being paid?
sql
Copy code
-- Performance is often linked to total sales amount
SELECT S.SNUM, S.SNAME, S.COMM, SUM(O.AMT) AS TotalSales
FROM Salespeople S
JOIN Orders O ON S.SNUM = O.SNUM
GROUP BY S.SNUM, S.SNAME, S.COMM
ORDER BY COMM, TotalSales;
122. Does the total amount in orders by customers in Rome and London exceed the commission paid to salespersons in London and New York by more than 5 times?
sql
Copy code
WITH TotalOrderAmount AS (
    SELECT SUM(AMT) AS TotalAmount
    FROM Orders
    WHERE CNUM IN (
        SELECT CNUM
        FROM Customers
        WHERE CITY IN ('Rome', 'London')
    )
),
TotalCommission AS (
    SELECT SUM(COMM) AS TotalCommission
    FROM Salespeople
    WHERE CITY IN ('London', 'New York')
)
SELECT TotalAmount > (SELECT TotalCommission * 5 FROM TotalCommission) AS Exceeds
FROM TotalOrderAmount;
123. Which is the date, order number, amount, and city for each salesperson (by name) for the maximum order he has obtained?
sql
Copy code
WITH MaxOrder AS (
    SELECT SNUM, MAX(AMT) AS MaxAmount
    FROM Orders
    GROUP BY SNUM
),
OrderDetails AS (
    SELECT O.SNUM, O.ODATE, O.ONUM, O.AMT, C.CITY
    FROM Orders O
    JOIN Customers C ON O.CNUM = C.CNUM
)
SELECT D.SNUM, S.SNAME, D.ODATE, D.ONUM, D.AMT, D.CITY
FROM MaxOrder M
JOIN OrderDetails D ON M.SNUM = D.SNUM AND M.MaxAmount = D.AMT
JOIN Salespeople S ON D.SNUM = S.SNUM;
124. Which salesperson(s) should be fired?
sql
Copy code
-- Assuming "should be fired" is based on lowest total sales
WITH SalespersonTotal AS (
    SELECT SNUM, SUM(AMT) AS TotalAmount
    FROM Orders
    GROUP BY SNUM
),
LowestPerformers AS (
    SELECT SNUM
    FROM SalespersonTotal
    WHERE TotalAmount = (SELECT MIN(TotalAmount) FROM SalespersonTotal)
)
SELECT S.SNUM, S.SNAME
FROM Salespeople S
JOIN LowestPerformers LP ON S.SNUM = LP.SNUM;
125. What is the total income for the company?
sql
Copy code
SELECT SUM(AMT) AS TotalIncome
FROM Orders;