71. Write a query using ANY or ALL that will find all salespeople who have no customers located in 
their city.
select * from salespeople s  -->1st table always which ever comes here even after sub query
where not exists(select 1 
from customers c
where c.city=s.city
and c.snum=s.snum);


2)
select s.sname as salesperson_name
from salespeople s
where s.city<>ALL(
select c.city from customers c
where c.sum=s.snum);

 no salesperson is assigned to Berlin.
 Hence, Berlin does not directly affect the results of the query because the query only checks if the salesperson's city has matching customers with their snum

72. Write a query using the EXISTS operator that selects all salespeople with customers located in 
their cities who are not assigned to them.
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field 
relates the two tables to one another.)
SELECT c.cname AS customer_name
FROM customers c
JOIN salespeople s ON c.snum = s.snum
WHERE s.sname IN ('Peel', 'Motika');

74. Count the number of salespeople registering orders for each day. (If a salesperson has more 
than one order on a given day, he or she should be counted only once.)
75. Find all orders attributed to salespeople in London.
select o.onum from orders o
join salespeople s
on o.snum=s.snum
where s.city="London";

76. Find all orders by customers not located in the same cities as their salespeople.
77. Find all salespeople who have customers with more than one current order.
78. Write a query that extracts from the Customers table every customer assigned to a 
salesperson who currently has at least one other customer (besides the customer being 
selected) with orders in the Orders table.
c2.cnum = 2001 (Hoffman): This customer has one order (order number 3003 with amount 767.29).
c2.cnum = 2006 (Clemens): This customer has two orders (order numbers 3008 with amount 4723 and 3011 with amount 9891.88).
c2.cnum = 2008 (Cisneros): This customer has one order (order number 3001 with amount 2000.1).
c2.cnum = 2002 (Giovanni): This customer has two orders (order numbers 3006 with amount 1098.26 and 3007 with amount 75.75).
79. Write a query that selects all customers whose names begin with ‘C’.
80. Write a query on the Customers table that will find the highest rating in each city. Put the output 
in this form : for the city (city) the highest rating is : (rating).
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the 
Orders table (without any repeats).
82. Write a query that lists customers in descending order of rating. Output the rating field first, 
followed by the customer’s names and numbers.
83. Find the average commission for salespeople in London.
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).

86. Write a query that will give you the names and cities of all salespeople in London with a 
commission above 0.10.
87. What will be the output from the following query?
SELECT * FROM ORDERS 
where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum > 
2003));
NOT condition is true because odate is false and false
88. Write a query that selects each customer’s smallest order.
89. Write a query that selects the first customer in alphabetical order whose name begins with G.
90. Write a query that counts the number of different nonNULL city values in the Customers table.
91. Find the average amount from the Orders table.
92. What would be the output from the following query?
SELECT * FROM ORDERS 
WHERE NOT ((odate = 10/03/96 OR snum > 1006) AND amt >= 
1500);
93. Find all customers who are not located in San Jose and whose rating is above 200.
94. Give a simpler way to write this query :
SELECT snum, sname city, comm FROM salespeople
WHERE (comm > + 0.12 OR comm < 0.14);
95. Evaluate the following query :
SELECT * FROM orders 
WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);
96. Which salespersons attend to customers not in the city they have been assigned to?
Why s.snum = c.snum Is Incorrect:

Mismatch in Data: snum in the salespeople table is the identifier for salespeople, while snum in the customers table represents the salesperson assigned to a customer. They are not directly comparable.
 For example, snum in the salespeople table (1001) is Kanch in London, while in the customers table, snum 1001 is used to indicate which salesperson is responsible for a specific customer.
97. Which salespeople get commission greater than 0.11 are serving customers rated less than 
250?
98. Which salespeople have been assigned to the same city but get different commission 
percentages?
this pair is included in the results because they have different commission rates in the same city.
Filtering: The WHERE clause ensures that:

The pairs are not the same salesperson (s1.snum <> s2.snum).
The commission rates are different (s1.comm <> s2.comm).

99. Which salesperson has earned the most by way of commission?
100.Does the customer who has placed the maximum number of orders have the maximum rating?
101.Has the customer who has spent the largest amount of money been given the highest rating?
102.List all customers in descending order of customer rating.
103.On which days has Hoffman placed orders?
104.Do all salespeople have different commissions?
105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?
106.How many salespersons have succeeded in getting orders?
107.How many customers have placed orders?
108.On which date has each salesperson booked an order of maximum value?
109.Who is the most successful salesperson?
110.Who is the worst customer with respect to the company?
111.Are all customers not having placed orders greater than 200 totally been serviced by 
salespersons Peel or Serres?
112.Which customers have the same rating?
113.Find all orders greater than the average for October 4th.
114.Which customers have above average orders?
-- Find customers with orders above the average order amount
SELECT c.cnum, c.cname, c.city
FROM customers c
JOIN orders o ON c.cnum = o.cnum
WHERE o.amt > (
    SELECT AVG(amt)
    FROM orders
);

115.List all customers with ratings above San Jose’s average.
116.Select the total amount in orders for each salesperson for whom the total is greater than the 
amount of the largest order in the table.
117.Give names and numbers of all salespersons who have more than one customer.
118.Select all salespersons by name and number who have customers in their city whom they 
don’t service.
119.Which customers’ rating should be lowered?
120.Is there a case for assigning a salesperson to Berlin?
The LEFT JOIN operation in SQL is used to include all records from the left table (in this case, customers) and the matched records from the right table (in this case, salespeople).
If there is no match, the result is NULL on the side of the right table.
121.Is there any evidence linking the performance of a salesperson to the commission that he or 
she is being paid?
122.Does the total amount in orders by customer in Rome and London exceed the commission 
paid to salespersons in London and New York by more than 5 times?
123.Which is the date, order number, amt and city for each salesperson (by name) for the 
maximum order he has obtained?
124.Which salesperson(s) should be fired?
125.What is the total income for the company?
